插件介绍

Decompiler（全程：Eclipse Class Decompiler）是一款整合了目前较好的两个反编译工具jad跟jd-core性能的一款较好的反编译插件，能够很方便的查看eclipse项目中的源码以及java源码，，，废话不多说了，来看教程，装完了自己感受下

1.下载Eclipse Class Decompiler插件zip压缩包，解压后如图（本人是解压到当前文件夹了，待会拷贝的时候注意不要把压缩包拷贝进去）

　　下载地址：http://bbs.csdn.net/topics/390263414

　　可能会收费，对于经常下载的人冲个10块下载个一年不成问题

　　　　

2.将上面截图中除了压缩包意外的所有文件夹跟文件贴到eclipse的安装目录下的eclipse文件下。如下图，打开选中的文件夹把刚才复制的所有东西贴到它下面（如果出现重复请覆盖）

　　

3.重启eclipse，打开windows->preferences->java,,会发现下面多了个“反编译器”的东东，不懂看下图

　　

4.照着上图配置操作，到此已经基本上到到目的了，点击即可看到源码

 

注：上面配置的“首选项”的作用解释:

1.重用缓存代码：只会反编译一次，以后每次打开该类文件，都显示的是缓存的反编译代码。 
2.忽略已存在的源代码：若未选中，则查看Class文件是否已绑定了Java源代码，如果已绑定，则显示Java源代码，如果未绑定，则反编译Class文件。若选中此项，则忽略已绑定的Java源代码，显示反编译结果。 
3.显示反编译器报告：显示反编译器反编译后生成的数据报告及异常信息。 
4.使用Eclipse代码格式化工具：使用Eclipse格式化工具对反编译结果重新格式化排版，反编译整个Jar包时，此操作会消耗一些时间。 
5.使用Eclipse成员排序：使用Eclipse成员排序对反编译结果重新格式化排版，反编译整个Jar包时，此操作会消耗大量时间。 
6.以注释方式输出原始行号信息：如果Class文件包含原始行号信息，则会将行号信息以注释的方式打印到反编译结果中。 
7.根据行号对齐源代码以便于调试：若选中该项，插件会采用AST工具分析反编译结果，并根据行号信息调整代码顺序，以便于Debug过程中的单步跟踪调试。 
8.设置类反编译查看器作为缺省的类文件编辑器：默认为选中，将忽略Eclipse自带的Class Viewer，每次Eclipse启动后，默认使用本插件提供的类查看器打开Class文件。

 